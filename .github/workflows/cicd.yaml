name: KBOT-CICD

on:
  push:
    branches:
      # - main
      - develop


jobs:
  ci:
    name: ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run test
        run: make test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Extract repository name
        id: extract_repo
        run: echo "APP=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)" >> $GITHUB_ENV

        #GET THE VERSION
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: BuildPush
        run: make image push APP=${{ env.APP }} REGISTRY=ghcr.io/${{ github.actor }} VERSION=${{env.VERSION}}

  #continuous delivery
  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

 
      - name: Increment version
        run: |
          # Read version from helm/values.yaml
          CVERSION=$(yq e '.chartVersion' helm/values.yaml)
          
          # Split into major, minor and patch
          MAJOR_VERSION=$(echo $CVERSION | cut -d. -f1)
          MINOR_VERSION=$(echo $CVERSION | cut -d. -f2)
          PATCH_VERSION=$(echo $CVERSION | cut -d. -f3)
          
          # Increment minor version
          NEW_VERSION="${MAJOR_VERSION}.$((MINOR_VERSION + 1)).${PATCH_VERSION}"
          
          # Update values.yaml with new version
          yq e -i ".chartVersion = \"$NEW_VERSION\"" helm/values.yaml
        
      - name: Modify values.yaml
        run: |
          yq e -i ".image.tag = \"${{ env.VERSION }}\"" helm/values.yaml

      #GIT TOKEN NEW VALUE RW
      - run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git commit -am "update version $VERSION"
          git push
